/**
 * Copyright 2014 Karol Kalisz
 * 
 * Original Source Code Location:
 *  https://github.com/KarolKalisz/DesignStudioSdkPack
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 *  
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */

/**
	Holder for Key, Label, Value. You can access the content as in below example.
	<br>
	var content = COLLECTION_1.getAsKeyLabelValueArray();<br>
	
	// a loop for all entries<br>
	// content is of type org.scn.pack.KeyLabelValueArray<br>
	content.forEach(function(element, index) {<br>
	
		// element is of type org.scn.pack.KeyLabelValue<br>
		var elKey = element.key;<br>
		var elLabel = element.label;<br>
	 	var elValue = "( " + element.value + " )");<br>
	});
*/
class org.scn.pack.KeyLabelValue {
  String key;
  String label;
  float value;
}

/**
	Array for org.scn.pack.KeyLabelValue. You can use this array as in below example.
	<br>
	var content = COLLECTION_1.getAsKeyLabelValueArray();<br>
	<br>
	// a loop for all entries<br>
	// content is of type org.scn.pack.KeyLabelValueArray<br>
	content.forEach(function(element, index) {<br>
	
		// element is of type org.scn.pack.KeyLabelValue<br>
		var elKey = element.key;<br>
		var elLabel = element.label;<br>
	 	var elValue = "( " + element.value + " )");<br>
	});
 */
class org.scn.pack.KeyLabelValueArray extends Array {
	org.scn.pack.KeyLabelValueArray (org.scn.pack.KeyLabelValue b);
}

/**
	Holder for value. You can use the content as in below example.
	<br>
	var content = COLLECTION_1.getAsKeyLabelValueArray();<br>
	<br>
	// a loop for all entries<br>
	// content is of type org.scn.pack.StringArray<br>
	content.forEach(function(element, index) {<br>
	
		// element is of type org.scn.pack.String<br>
		var elValue = element.value;<br>
	});
*/
class org.scn.pack.String {
  String value;
}

/**
	Array for org.scn.pack.String. You can use this array as in below example.
	<br>
	var content = ARRAY_1.getAsKeyLabelValueArray();<br>
	<br>
	// a loop for all entries<br>
	// content is of type org.scn.pack.StringArray<br>
	content.forEach(function(element, index) {<br>
	
		// element is of type org.scn.pack.String<br>
		var elValue = element.value;<br>
	});
*/
class org.scn.pack.StringArray extends Array {
	org.scn.pack.String (org.scn.pack.String b);
}

/** enum filed definition */
class org_scn_pack_SortDirectionEnumfield extends Enumfield {
       
}

/**
* A set of constants to specify sort direction
*/
class org_scn_pack_SortDirection extends Enum {

       /** ASCENDING */
	org_scn_pack_SortDirectionEnumfield ASCENDING;
       
       /** DESCENDING */
	org_scn_pack_SortDirectionEnumfield DESCENDING;
}
